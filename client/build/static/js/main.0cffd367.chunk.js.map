{"version":3,"sources":["Components/wizard/Checkout.js","Components/wizard/CompanyForm.js","Components/wizard/UserForm.js","Components/wizard/ServiceForm.js","Components/wizard/ComputerForm.js","Components/wizard/ServerForm.js","Components/wizard/FirewallForm.js","Components/wizard/FileShare.js","Components/FAB/FAB.js","Components/FAB/index.js","Components/Cards/Card1.js","Components/Cards/Card2.js","Components/Cards/Card3.js","Components/Cards/Card4.js","Components/Dashboard/Dashboard.js","Components/Navbar/Navbar.js","Components/OrgTable/OrgTable.js","Components/Organizations/Organizations.js","Components/Onboarding/Onboarding.js","Components/Home/Home.js","Components/Loader/Loader.js","App.js","registerServiceWorker.js","index.js"],"names":["steps","Checkout","state","activeStep","backup","backupType","frequency","completionStatus","localAreaNetwork","subnet","liveNodes","company","name","address1","address2","city","zip","country","computers","computerName","IPAddress","servers","serverName","users","firstName","lastName","userName","emailAddress","fileShares","shareName","sharePath","firewalls","firewallType","LANIPAddress","WANIPAddress","internetProviders","uploadSpeed","downloadSpeed","finishSteps","_callee","e","result","_this2","this","C_Users_ePossible_Downloads_Tech_Connect_client_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","Promise","resolve","reject","setState","service","sent","abrupt","stop","getStepContent","step","react__WEBPACK_IMPORTED_MODULE_8___default","createElement","_CompanyForm__WEBPACK_IMPORTED_MODULE_19__","addData","console","log","_this","_UserForm__WEBPACK_IMPORTED_MODULE_20__","_ComputerForm__WEBPACK_IMPORTED_MODULE_22__","_ServerForm__WEBPACK_IMPORTED_MODULE_23__","_FirewallForm__WEBPACK_IMPORTED_MODULE_24__","_FileShare__WEBPACK_IMPORTED_MODULE_25__","_ServiceForm__WEBPACK_IMPORTED_MODULE_21__","then","r","clone","Object","assign","axios","post","setImmediate","Error","handleBack","classes","props","Fragment","_material_ui_core_CssBaseline__WEBPACK_IMPORTED_MODULE_10___default","_material_ui_core_AppBar__WEBPACK_IMPORTED_MODULE_11___default","position","color","className","appBar","_material_ui_core_Toolbar__WEBPACK_IMPORTED_MODULE_12___default","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_18___default","variant","noWrap","layout","_material_ui_core_Paper__WEBPACK_IMPORTED_MODULE_13___default","paper","component","align","_material_ui_core_Stepper__WEBPACK_IMPORTED_MODULE_14___default","stepper","map","label","_material_ui_core_Step__WEBPACK_IMPORTED_MODULE_15___default","key","_material_ui_core_StepLabel__WEBPACK_IMPORTED_MODULE_16___default","length","gutterBottom","buttons","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_17___default","onClick","button","React","Component","withStyles","theme","C_Users_ePossible_Downloads_Tech_Connect_client_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_7__","width","marginLeft","spacing","unit","marginRight","breakpoints","up","marginTop","marginBottom","padding","concat","display","justifyContent","CompanyForm","handleChange","event","target","C_Users_ePossible_Downloads_Tech_Connect_client_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","value","react__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_8___default","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_7___default","container","item","xs","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_9___default","required","id","fullWidth","autoComplete","onChange","sm","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_10___default","UserForm","updateState","newEntry","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_7___default","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_8___default","_FAB__WEBPACK_IMPORTED_MODULE_11__","ServiceForm","internetProvider","internetIPAdrress","LANSubnet","backupFrequency","ComputerForm","index","group","getAttribute","newAr","addComputer","joined","computerIPAddress","compStat","compIP","compName","i","inputProps","ServerForm","servStat","servIP","servName","FirewallForm","firewallName","firewallStat","firewallIP","FileShareForm","filePath","fab","margin","extendedIcon","react_default","Fab_default","aria-label","Add_default","__webpack_require__","d","__webpack_exports__","FAB","card","maxWidth","media","height","Card_default","CardActionArea_default","CardMedia_default","image","title","CardContent_default","Typography_default","CardActions_default","Button_default","size","CenteredGrid","onbaordingClick","AppBar_default","Toolbar_default","root","Grid_default","style","md","lg","textDecoration","href","Card1","Card2","Card3","Card4","flexGrow","textAlign","palette","text","secondary","new","Navbar","open","signOut","firebase","auth","window","location","anchorEl","isMenuOpen","Boolean","IconButton_default","toggleDrawer","menuButton","grow","isSignedIn","Link","exact","to","Drawer_default","onClose","tabIndex","role","onKeyDown","aria-owns","undefined","aria-haspopup","handleProfileMenuOpen","list","fullList","SimpleTable","organizations","organization","componentDidMount","get","data","catch","handleDelete","getOrganization","Paper_default","Table_default","table","TableHead_default","TableRow_default","TableCell_default","TableBody_default","scope","overflowX","minWidth","Organizations","OrgTable","Onboarding","Home","StyledFirebaseAuth_default","uiConfig","firebaseAuth","Loader","class","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","signInFlow","signInSuccessUrl","signInOptions","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","App","unregisterAuthObserver","onAuthStateChanged","user","_this3","BrowserRouter","Components_Navbar_Navbar","Route","path","Components_Home_Home","Dashboard","Components_Loader_Loader","Components_Organizations_Organizations","Components_Onboarding_Onboarding","isLocalhost","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.0cffd367.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport CompanyForm from './CompanyForm';\nimport UserForm from './UserForm'\nimport ServiceForm from './ServiceForm';\nimport ComputerForm from './ComputerForm'\nimport ServerForm from './ServerForm'\nimport FirewallForm from './FirewallForm'\nimport FileShare from './FileShare'\nimport axios from 'axios'\n\n\nconst styles = theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    [theme.breakpoints.up(1000 + theme.spacing.unit * 2 * 2)]: {\n      width: 1000,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 3,\n    marginBottom: theme.spacing.unit * 3,\n    padding: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\n      marginTop: theme.spacing.unit * 6,\n      marginBottom: theme.spacing.unit * 6,\n      padding: theme.spacing.unit * 3,\n    },\n  },\n  stepper: {\n    padding: `${theme.spacing.unit * 3}px 0 ${theme.spacing.unit * 5}px`,\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing.unit * 3,\n    marginLeft: theme.spacing.unit,\n  },\n});\n\nconst steps = ['Company Info', 'User Info','Computer Info', 'Server Info', 'Firewall Info', 'File Share Info','Service Info'];\n\nclass Checkout extends React.Component {\n  state = {\n    activeStep: 0,\n    backup: {\n          backupType: '',\n          frequency: '',\n          completionStatus: ''\n      },\n    localAreaNetwork: {\n          subnet: '',\n          liveNodes: '',\n          completionStatus: '' \n      },\n    company:{\n        name: '',\n        address1:'',\n        address2:'',\n        city:'',\n        state: '',\n        zip: '',\n        country:''\n      },\n    computers: [\n          {\n            computerName: '',\n            IPAddress: '',\n            completionStatus: ''\n          }\n      ],\n    servers: [\n          {\n             \n            serverName: '',\n            IPAddress: '',\n            completionStatus: ''\n          }\n      ],\n    users: [\n          {\n            firstName: '',\n            lastName:'',\n            userName:'',\n            emailAddress:'',\n            completionStatus: ''\n          }\n        ],\n    fileShares: [\n          {\n            shareName: '',\n            sharePath: '',\n            completionStatus: ''\n          }\n      ],\n    firewalls: [\n          {\n            name: '',\n            firewallType: '',\n            LANIPAddress: '',\n            WANIPAddress: '',\n            completionStatus: ''\n          }\n      ],\n    internetProviders: [\n        {\n          name: '',\n          uploadSpeed: '',\n          downloadSpeed: '',\n          IPAddress: '',\n          completionStatus: ''\n        }\n      ]\n}\n\nfinishSteps = async function (e) {\n  let result = await new Promise((resolve, reject) => {\n    this.setState({\n      service: e,\n      activeStep: this.state.activeStep + 1\n    });\n    resolve(true)\n  })\n  return result\n}\n\n  getStepContent = (step) => {\n    switch (step) {\n      case 0:\n        return (<CompanyForm addData={(e) => {\n          console.log(e)\n          this.setState({\n            company: e,\n            activeStep: this.state.activeStep + 1\n          });\n        }}\n        />);\n        case 1:\n        return (<UserForm addData={(e) => {\n          console.log(this.state)\n          this.setState({\n            users: e,\n            activeStep: this.state.activeStep + 1\n          });\n        }}\n      />);\n      case 2:\n        return (<ComputerForm addData={(e) => {\n          this.setState({\n            computers: e,\n            activeStep: this.state.activeStep + 1\n          });\n        }}\n      />);\n      case 3:\n        return (<ServerForm addData={(e) => {\n          this.setState({\n            servers: e,\n            activeStep: this.state.activeStep + 1\n          });\n        }}\n      />);\n      case 4:\n        return (<FirewallForm addData={(e) => {\n          this.setState({\n            firewalls: e,\n            activeStep: this.state.activeStep + 1\n          });\n        }}\n      />);\n      case 5:\n      return (<FileShare addData={(e) => {\n        this.setState({\n          fileShares: e,\n          activeStep: this.state.activeStep + 1\n        });\n      }}\n    />);\n      case 6:\n        return (<ServiceForm addData={(e) => {\n          this.finishSteps(e)\n            .then(r => {\n              if (r) {\n                console.log(this.state)\n                const clone = Object.assign({}, this.state);\n                delete clone.activeStep;\n                axios.post('/organization', clone)\n                setImmediate(() => console.log(this.state))\n                // insert db request here...\n\n              }\n            })\n        }}\n      />);\n      default:\n        throw new Error('Unknown step');\n    }\n  }\n\n  handleBack = () => {\n    this.setState(state => ({\n      activeStep: state.activeStep - 1,\n    }));\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { activeStep } = this.state;\n\n    return (\n      <>\n        <CssBaseline />\n        <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\n          <Toolbar>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              Onboarding New Client Wizard\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <main className={classes.layout}>\n          <Paper className={classes.paper}>\n            <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n              Onboard New Client \n            </Typography>\n            <Stepper activeStep={activeStep} className={classes.stepper}>\n              {steps.map(label => (\n                <Step key={label}>\n                  <StepLabel>{label}</StepLabel>\n                </Step>\n              ))}\n            </Stepper>\n            <React.Fragment>\n              {activeStep === steps.length ? (\n                <>\n                  <Typography variant=\"h5\" gutterBottom>\n                    Welcome Aboard \n                  </Typography>\n                  <Typography variant=\"subtitle1\">\n                    Company Information Was Successfully Submitted!\n                    Please Check The \"Organizations\" Tab For Verificaiton.\n                  </Typography>\n                </>\n              ) : (\n                <>\n                  {this.getStepContent(activeStep)}\n                  <div className={classes.buttons}>\n                    {activeStep !== 0 && (\n                      <Button onClick={this.handleBack} className={classes.button}>\n                        Back\n                      </Button>\n                    )}\n                  </div>\n                </>\n              )}\n            </React.Fragment>\n          </Paper>\n        </main>\n      </>\n    );\n  }\n}\n\nCheckout.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Checkout);\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nclass CompanyForm extends React.Component{\n  state = {\n    name:'',\n    address1:'',\n    address2:'',\n    city:'',\n    state:'',\n    zip:'',\n    country:''\n  }\n\n  handleChange = event => {\n    var name = event.target.name\n      this.setState({[name]: event.target.value})\n  }\n\n  render(){\n    return (\n      <>\n        <Typography variant=\"h6\" gutterBottom>\n          Company Information\n        </Typography>\n        <Grid container spacing={24}>\n          <Grid item xs={12}>\n            <TextField\n              required\n              id=\"name\"\n              name=\"name\"\n              label=\"Company Name\"\n              fullWidth\n              autoComplete=\"fname\"\n              value={this.state.name}\n              onChange={this.handleChange}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              required\n              id=\"address1\"\n              name=\"address1\"\n              label=\"Address line 1\"\n              fullWidth\n              autoComplete=\"billing address-line1\"\n              value={this.state.address1}\n              onChange={this.handleChange}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              id=\"address2\"\n              name=\"address2\"\n              label=\"Address line 2\"\n              fullWidth\n              autoComplete=\"billing address-line2\"\n              value={this.state.address2}\n              onChange={this.handleChange}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              required\n              id=\"city\"\n              name=\"city\"\n              label=\"City\"\n              fullWidth\n              autoComplete=\"billing address-level2\"\n              value={this.state.city}\n              onChange={this.handleChange}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n             id=\"state\"\n             name=\"state\"\n             label=\"State/Province/Region\"\n             fullWidth\n             value={this.state.state}\n             onChange={this.handleChange}\n             />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              required\n              id=\"zip\"\n              name=\"zip\"\n              label=\"Zip / Postal code\"\n              fullWidth\n              autoComplete=\"billing postal-code\"\n              value={this.state.zip}\n              onChange={this.handleChange}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              required\n              id=\"country\"\n              name=\"country\"\n              label=\"Country\"\n              fullWidth\n              autoComplete=\"billing country\"\n              value={this.state.country}\n              onChange={this.handleChange}\n            />\n            \n          </Grid>\n          <Grid item xs={12}>\n              <Button\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            this.props.addData(this.state)\n                           }\n                          }\n                >\n                          Next\n              </Button>\n          </Grid>\n        </Grid>\n      </>\n    );\n  }\n  \n}\n\nexport default CompanyForm;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport FAB from '../FAB'\n\nclass UserForm extends React.Component {\n\n  state = {\n      users: [{}],\n      firstName:'',\n      lastName:'',\n      userName: '',\n      emailAddress:''\n    }\n\n    handleChange = (event) => {\n      var name = event.target.name\n      this.setState({[name]: event.target.value})\n    }\n\n    // handleChange = (event, index) => {\n    //   var name = event.target.name\n    //   var group = event.target.getAttribute(\"group\")\n    //   var newAr = this.state[group].concat([]);\n    //   newAr[index][name] = event.target.value;\n    //   console.log(`${group}, ${name}: ${event.target.value}`)\n    //   this.setState({[group]: newAr})\n    // }\n\n  updateState = () => {\n    // var userStat = false\n    // var userIP = this.state.IPAddress\n    // var firewallName = this.state.firewallName\n    // firewallIP || firewallName === null ? firewallStat = false : firewallStat = true\n    // var joined = this.state.firewalls.concat({firewallName: firewallName, IPAddress: firewallIP, completionStatus: firewallStat});\n    // this.setState({ firewalls: joined })\n    // console.log(`firewall name is ${firewallName} and firewall IP address is ${firewallIP}`)\n    // console.log(this.state)\n  }\n\n  newEntry = () => {\n    \n    console.log(\"new entry triggered\")\n  }\n\n  render(){\n    return (\n      <>\n        <Typography variant=\"h6\" gutterBottom>\n        User Information\n        </Typography>\n        <Grid container spacing={24}>\n        <Grid item xs={12} sm={5}>\n                <TextField\n                required\n                id=\"firstName\"\n                name=\"firstName\"\n                label=\"First Name\"\n                fullWidth\n                autoComplete=\"fname\"\n                value={this.state.firstName}\n                onChange={this.handleChange}\n              />\n          </Grid>\n          <Grid item xs={12} sm={5}>\n                <TextField\n                required\n                id=\"lastName\"\n                name=\"lastName\"\n                label=\"Last Name\"\n                fullWidth\n                autoComplete=\"lname\"\n                value={this.state.lastName}\n                onChange={this.handleChange}\n              />\n          </Grid>\n          <Grid item xs={12} sm={5}>\n                <TextField\n                required\n                id=\"userName\"\n                name=\"userName\"\n                label=\"User Name\"\n                fullWidth\n                autoComplete=\"uname\"\n                value={this.state.userName}\n                onChange={this.handleChange}\n              />\n          </Grid>\n          <Grid item xs={12} sm={5}>\n                <TextField\n                required\n                id=\"emailAddress\"\n                name=\"emailAddress\"\n                label=\"Email Address\"\n                fullWidth\n                autoComplete=\"email\"\n                value={this.state.firewallType}\n                onChange={this.handleChange}\n              />\n          </Grid>\n          <Grid item xs={12} sm={2}>\n            <Button onClick={this.updateState}><FAB >New Entry</FAB></Button>\n          </Grid>\n          <Grid item xs={12}>\n              <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => {\n                    this.updateState(this.state.serverName,this.state.IPAddress)\n                    this.props.addData(this.state)\n                    \n                    }\n                  }>\n                  Next\n              </Button>\n          </Grid>\n        </Grid>\n      </>\n    );\n  }\n  \n}\n\nexport default UserForm;","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nclass ServiceForm extends React.Component {\n\n  state = {\n      internetProvider:'',\n      internetIPAdrress:'',\n      uploadSpeed:'',\n      downloadSpeed:'',\n      LANSubnet:'',\n      liveNodes:'',\n      backupType:'',\n      backupFrequency:''\n  }\n\n  handleChange = (event) => {\n    var name = event.target.name\n    this.setState({[name]: event.target.value})\n  }\n\n  render(){\n    return (\n      <>\n        <Typography variant=\"h6\" gutterBottom>\n          Service Information\n        </Typography>\n        <Grid container spacing={24}>\n          \n          <Grid item xs={12} sm={6}>\n            <TextField\n              required\n              id=\"internetProvider\"\n              name=\"internetProvider\"\n              label=\"Internet Provider\"\n              fullWidth\n              autoComplete=\"fname\"\n              value={this.state.internetProvider}\n              onChange={this.handleChange}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              required\n              id=\"internetIPAdrress\"\n              name=\"internetIPAdrress\"\n              label=\"Internet IP Address\"\n              fullWidth\n              autoComplete=\"fname\"\n              value={this.state.internetIPAdrress}\n              onChange={this.handleChange}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              required\n              id=\"uploadSpeed\"\n              name=\"uploadSpeed\"\n              label=\"Upload Speed\"\n              fullWidth\n              autoComplete=\"fname\"\n              value={this.state.uploadSpeed}\n              onChange={this.handleChange}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              required\n              id=\"downloadSpeed\"\n              name=\"downloadSpeed\"\n              label=\"Download Speed\"\n              fullWidth\n              autoComplete=\"fname\"\n              value={this.state.downloadSpeed}\n              onChange={this.handleChange}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              required\n              id=\"LANSubnet\"\n              name=\"LANSubnet\"\n              label=\"LAN Subnet\"\n              fullWidth\n              autoComplete=\"fname\"\n              value={this.state.LANSubnet}\n              onChange={this.handleChange}\n\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              required\n              id=\"liveNodes\"\n              name=\"liveNodes\"\n              label=\"Live Nodes\"\n              fullWidth\n              autoComplete=\"fname\"\n              value={this.state.liveNodes}\n              onChange={this.handleChange}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              required\n              id=\"backupType\"\n              name=\"backupType\"\n              label=\"Backup Type\"\n              fullWidth\n              autoComplete=\"fname\"\n              value={this.state.backupType}\n              onChange={this.handleChange}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              required\n              id=\"backupFrequency\"\n              name=\"backupFrequency\"\n              label=\"Backup Frequency\"\n              fullWidth\n              autoComplete=\"fname\"\n              value={this.state.backupFrequency}\n              onChange={this.handleChange}\n            />\n          </Grid>\n          <Grid item xs={12}>\n              <Button\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            this.props.addData(this.state)\n                            \n                          }\n                          }\n                >\n                          Next\n              </Button>\n          </Grid>\n        </Grid>\n      </>\n    );\n  }\n  \n}\n\nexport default ServiceForm;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport FAB from '../FAB'\n\nclass ComputerForm extends React.Component {\n\n  state = {\n      computers: [{}],\n      computerName: '',\n      IPAddress: '',\n    }\n\n    // handleChange = (event) => {\n    //   var name = event.target.name\n    //   this.setState({[name]: event.target.value})\n    // }\n\n  handleChange = (event, index) => {\n    var name = event.target.name\n    var group = event.target.getAttribute(\"group\")\n    var newAr = this.state[group].concat([]);\n    newAr[index][name] = event.target.value;\n    console.log(`${group}, ${name}: ${event.target.value}`)\n    this.setState({[group]: newAr})\n  }\n\n  addComputer = () => {\n    var joined = this.state.computers.concat({name: '', computerIPAddress: ''});\n    this.setState({ computers: joined })\n  }\n\n  updateState = () => {\n    var compStat = false\n    var compIP = this.state.IPAddress\n    var compName = this.state.computerName\n    compIP || compName === null ? compStat = false : compStat = true\n    var joined = this.state.computers.concat({computerName: compName, IPAddress: compIP, completionStatus: compStat});\n    this.setState({ computers: joined })\n    console.log(`Computer name is ${compName} and computer IP address is ${compIP}`)\n    console.log(this.state)\n  }\n\n  newEntry = () => {\n    \n    console.log(\"new entry triggered\")\n  }\n\n  render() {\n    return (\n      <>\n        <Typography variant=\"h6\" gutterBottom>\n          Computer Information\n        </Typography>\n        <Grid container spacing={24}>\n        <Grid item xs={12} sm={5}>\n            {this.state.computers.map((e,i) => {\n              return <TextField\n                required\n                id=\"computerName\"\n                inputProps={{group: \"computers\"}}\n                name=\"computerName\"\n                label=\"Computer Name\"\n                fullWidth\n                autoComplete=\"fname\"\n                value={this.state.computers[i].computerName}\n                onChange={(e) => this.handleChange(e, i)}\n              />\n            })}\n          </Grid>\n          <Grid item xs={12} sm={5}>\n          {this.state.computers.map((e,i) => {\n              return <TextField\n              required\n              id=\"computerIPAddress\"\n              inputProps={{group: \"computers\"}}\n              name=\"computerIPAddress\"\n              label=\"Computer IP Address\"\n              fullWidth\n              autoComplete=\"fname\"\n              value={this.state.computers[i].computerIPAddress}\n              onChange={(e) => this.handleChange(e, i)}\n          />})}\n          </Grid>\n          <Grid item xs={12} sm={2}>\n            <Button onClick={this.addComputer}><FAB >New Entry</FAB></Button>\n          </Grid>\n          <Grid item xs={12}>\n              <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => {\n                    this.updateState(this.state.computerName,this.state.IPAddress)\n                    this.props.addData(this.state)\n                    \n                    }\n                  }>\n                  Next\n              </Button>\n          </Grid>\n        </Grid>\n      </>\n    );\n  }\n  \n}\n\nexport default ComputerForm;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport FAB from '../FAB'\n\nclass ServerForm extends React.Component {\n\n  state = {\n      servers: [{}],\n      serverName: '',\n      IPAddress: '',\n    }\n\n    handleChange = (event) => {\n      var name = event.target.name\n      this.setState({[name]: event.target.value})\n    }\n\n  updateState = () => {\n    var servStat = false\n    var servIP = this.state.IPAddress\n    var servName = this.state.serverName\n    servIP || servName === null ? servStat = false : servStat = true\n    var joined = this.state.servers.concat({serverName: servName, IPAddress: servIP, completionStatus: servStat});\n    this.setState({ servers: joined })\n    console.log(`server name is ${servName} and server IP address is ${servIP}`)\n    console.log(this.state)\n  }\n\n  newEntry = () => {\n    \n    console.log(\"new entry triggered\")\n  }\n\n  render(){\n    return (\n      <>\n        <Typography variant=\"h6\" gutterBottom>\n          Server Information\n        </Typography>\n        <Grid container spacing={24}>\n          <Grid item xs={12} sm={5}>\n                <TextField\n                required\n                id=\"serverName\"\n                name=\"serverName\"\n                label=\"Server Name\"\n                fullWidth\n                autoComplete=\"fname\"\n                value={this.state.serverName}\n                onChange={this.handleChange}\n              />\n          </Grid>\n          <Grid item xs={12} sm={5}>\n              <TextField\n              required\n              id=\"IPAddress\"\n              name=\"IPAddress\"\n              label=\"Server IP Address\"\n              fullWidth\n              autoComplete=\"fname\"\n              value={this.state.IPAddress}\n              onChange={this.handleChange}\n          />\n          </Grid>\n          <Grid item xs={12} sm={2}>\n            <Button onClick={this.updateState}><FAB >New Entry</FAB></Button>\n          </Grid>\n          <Grid item xs={12}>\n              <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => {\n                    this.updateState(this.state.serverName,this.state.IPAddress)\n                    this.props.addData(this.state)\n                    \n                    }\n                  }>\n                  Next\n              </Button>\n          </Grid>\n        </Grid>\n      </>\n    );\n  }\n  \n}\n\nexport default ServerForm;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport FAB from '../FAB'\n\nclass FirewallForm extends React.Component {\n\n  state = {\n      firewalls: [{}],\n      firewallName: '',\n      firewallType: '',\n      LANIPAddress: '',\n      WANIPAddress: ''\n    }\n\n    handleChange = (event) => {\n      var name = event.target.name\n      this.setState({[name]: event.target.value})\n    }\n\n  updateState = () => {\n    var firewallStat = false\n    var firewallIP = this.state.IPAddress\n    var firewallName = this.state.firewallName\n    firewallIP || firewallName === null ? firewallStat = false : firewallStat = true\n    var joined = this.state.firewalls.concat({firewallName: firewallName, IPAddress: firewallIP, completionStatus: firewallStat});\n    this.setState({ firewalls: joined })\n    console.log(`firewall name is ${firewallName} and firewall IP address is ${firewallIP}`)\n    console.log(this.state)\n  }\n\n  newEntry = () => {\n    \n    console.log(\"new entry triggered\")\n  }\n\n  render(){\n    return (\n      <>\n        <Typography variant=\"h6\" gutterBottom>\n        firewall Information\n        </Typography>\n        <Grid container spacing={24}>\n          <Grid item xs={12} sm={5}>\n                <TextField\n                required\n                id=\"firewallName\"\n                name=\"firewallName\"\n                label=\"Firewall Name\"\n                fullWidth\n                autoComplete=\"fname\"\n                value={this.state.firewallName}\n                onChange={this.handleChange}\n              />\n          </Grid>\n          <Grid item xs={12} sm={5}>\n                <TextField\n                required\n                id=\"firewallType\"\n                name=\"firewallType\"\n                label=\"Firewall Type\"\n                fullWidth\n                autoComplete=\"fname\"\n                value={this.state.firewallType}\n                onChange={this.handleChange}\n              />\n          </Grid>\n          <Grid item xs={12} sm={5}>\n              <TextField\n              required\n              id=\"LANIPAddress\"\n              name=\"LANIPAddress\"\n              label=\"Firewall LAN IP Address\"\n              fullWidth\n              autoComplete=\"fname\"\n              value={this.state.LANIPAddress}\n              onChange={this.handleChange}\n          />\n          </Grid>\n          <Grid item xs={12} sm={5}>\n              <TextField\n              required\n              id=\"WANIPAddress\"\n              name=\"WANIPAddress\"\n              label=\"Firewall WAN IP Address\"\n              fullWidth\n              autoComplete=\"fname\"\n              value={this.state.WANIPAddress}\n              onChange={this.handleChange}\n          />\n          </Grid>\n          <Grid item xs={12} sm={2}>\n            <Button onClick={this.updateState}><FAB >New Entry</FAB></Button>\n          </Grid>\n          <Grid item xs={12}>\n              <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => {\n                    this.updateState(this.state.serverName,this.state.IPAddress)\n                    this.props.addData(this.state)\n                    \n                    }\n                  }>\n                  Next\n              </Button>\n          </Grid>\n        </Grid>\n      </>\n    );\n  }\n  \n}\n\nexport default FirewallForm;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport FAB from '../FAB'\n\nclass FileShareForm extends React.Component {\n\n  state = {\n      fileShares: [{}],\n      filePath:'',\n      sharePath: ''\n    }\n\n    handleChange = (event) => {\n      var name = event.target.name\n      this.setState({[name]: event.target.value})\n    }\n\n  updateState = () => {\n    // var userStat = false\n    // var userIP = this.state.IPAddress\n    // var firewallName = this.state.firewallName\n    // firewallIP || firewallName === null ? firewallStat = false : firewallStat = true\n    // var joined = this.state.firewalls.concat({firewallName: firewallName, IPAddress: firewallIP, completionStatus: firewallStat});\n    // this.setState({ firewalls: joined })\n    // console.log(`firewall name is ${firewallName} and firewall IP address is ${firewallIP}`)\n    // console.log(this.state)\n  }\n\n  newEntry = () => {\n    \n    console.log(\"new entry triggered\")\n  }\n\n  render(){\n    return (\n      <>\n        <Typography variant=\"h6\" gutterBottom>\n        File Share Information\n        </Typography>\n        <Grid container spacing={24}>\n        <Grid item xs={12} sm={5}>\n                <TextField\n                required\n                id=\"filePath\"\n                name=\"filePath\"\n                label=\"File Path\"\n                fullWidth\n                autoComplete=\"fpath\"\n                value={this.state.filePath}\n                onChange={this.handleChange}\n              />\n          </Grid>\n          <Grid item xs={12} sm={5}>\n                <TextField\n                required\n                id=\"sharePath\"\n                name=\"sharePath\"\n                label=\"Share Path\"\n                fullWidth\n                autoComplete=\"spath\"\n                value={this.state.sharePath}\n                onChange={this.handleChange}\n              />\n          </Grid>\n          <Grid item xs={12} sm={2}>\n            <Button onClick={this.updateState}><FAB >New Entry</FAB></Button>\n          </Grid>\n          <Grid item xs={12}>\n              <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => {\n                    this.updateState(this.state.serverName,this.state.IPAddress)\n                    this.props.addData(this.state)\n                    \n                    }\n                  }>\n                  Next\n              </Button>\n          </Grid>\n        </Grid>\n      </>\n    );\n  }\n  \n}\n\nexport default FileShareForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\n\r\nconst styles = theme => ({\r\n  fab: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n});\r\n\r\nfunction FloatingActionButtons(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <div>\r\n      <Fab color=\"primary\" aria-label=\"Add\" className={classes.fab} >\r\n        <AddIcon />\r\n      </Fab>\r\n    </div>\r\n  );\r\n}\r\n\r\nFloatingActionButtons.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(FloatingActionButtons);","export { default } from './FAB'","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = {\r\n  card: {\r\n    maxWidth: 345,\r\n    margin:'auto'\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n};\r\n\r\nfunction MediaCard(props) {\r\n  const { classes } = props;\r\n \r\n  return (\r\n    \r\n    <Card className={classes.card} >\r\n      <CardActionArea>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image=\"https://images.pexels.com/photos/53176/architecture-iron-steel-building-53176.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            Add new Company\r\n          </Typography>\r\n          <Typography component=\"p\">\r\n            Click here to set up a new Company.\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Plan\r\n        </Button>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Gather Info\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nMediaCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(MediaCard);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = {\r\n  card: {\r\n    maxWidth: 345,\r\n    margin:'auto'\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n};\r\n\r\nfunction MediaCard(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image=\"https://images.pexels.com/photos/842158/pexels-photo-842158.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            Onboard new Client\r\n          </Typography>\r\n          <Typography component=\"p\">\r\n           Click here to start onboarding a new Client.\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Plan\r\n        </Button>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Gather Info\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nMediaCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(MediaCard);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = {\r\n  card: {\r\n    maxWidth: 345,\r\n    margin:'auto'\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n};\r\n\r\nfunction MediaCard(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image=\"https://images.pexels.com/photos/830891/pexels-photo-830891.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            Configure Settings\r\n          </Typography>\r\n          <Typography component=\"p\">\r\n            Click here to configure Settings\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Plan\r\n        </Button>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Gather Info\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nMediaCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(MediaCard);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = {\r\n  card: {\r\n    maxWidth: 345,\r\n    margin:'auto'\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n};\r\n\r\nfunction MediaCard(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image=\"https://images.pexels.com/photos/256112/pexels-photo-256112.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            Prepare Reports\r\n          </Typography>\r\n          <Typography component=\"p\">\r\n            Click here to prepare reports.\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Plan\r\n        </Button>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Gather Info\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nMediaCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(MediaCard);","import React from 'react'\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card1 from '../Cards/Card1'\r\nimport Card2 from '../Cards/Card2'\r\nimport Card3 from '../Cards/Card3'\r\nimport Card4 from '../Cards/Card4'\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      \r\n    },\r\n    paper: {\r\n      padding: theme.spacing.unit * 2,\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    new:{\r\n        marginTop: '100px'\r\n    }\r\n  });\r\n  \r\n\r\n\r\n  class CenteredGrid extends React.Component{\r\n    \r\n    onbaordingClick = () => {\r\n      console.log(\"Clicked\")\r\n    }\r\n\r\n    render(){\r\n      const { classes } = this.props;\r\n  \r\n      return (\r\n        <>\r\n        <AppBar position=\"\" color=\"default\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n              Dashboard\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <div className={classes.root}>\r\n          <Grid container spacing={24} style={{marginLeft:0.1}}>\r\n            <Grid item xs={12} md={6} lg={3} style={{marginTop:'100px'}} >\r\n              <a style={{textDecoration:'none'}} href='/onboarding'><Card1 /></a>\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={3} style={{marginTop:'100px'}}>\r\n            <a style={{textDecoration:'none'}} href='/onboarding'><Card2 /></a>\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={3} style={{marginTop:'100px'}}>\r\n              <Card3 />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={3} style={{marginTop:'100px'}}>\r\n              <Card4 />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n        </>\r\n      );\r\n    }\r\n    \r\n  }\r\n  \r\n  CenteredGrid.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n  };\r\n  \r\nexport default withStyles(styles)(CenteredGrid);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { Link } from 'react-router-dom'\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport firebase from 'firebase'\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  }\r\n};\r\n\r\nclass Navbar extends React.Component {\r\n\r\n  state = {\r\n    open: false\r\n  }\r\n\r\n  signOut = () => {\r\n    firebase.auth().signOut()\r\n    window.location = '/'\r\n    \r\n  }\r\n\r\n\r\n  render() {\r\n    const { anchorEl } = this.state;\r\n    const isMenuOpen = Boolean(anchorEl);\r\n    const { classes } = this.props;\r\n\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton onClick={() => this.toggleDrawer(true)} className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\r\n              \r\n            </IconButton>\r\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n              Tech Connect\r\n            </Typography>\r\n\r\n            {\r\n              this.props.isSignedIn ? (\r\n                <>\r\n                  <Link exact to='./Dashboard' style={{ color: 'white', textDecoration: 'none' }}>\r\n                    <Button color='inherit'>Dashboard</Button>\r\n                  </Link>\r\n\r\n                  <Link to='/Organizations' style={{ color: 'white', textDecoration: 'none' }}>\r\n                    <Button color='inherit'>Organizations</Button>\r\n                  </Link>\r\n\r\n                    <Button onClick={this.signOut} color='inherit'>Sign Out</Button>\r\n                </>\r\n              ) : (\r\n                <Link to='/' style={{ color: 'white', textDecoration: 'none' }}></Link>\r\n              )\r\n            }\r\n\r\n            <Drawer open={this.state.open} onClose={() => this.toggleDrawer(false)}>\r\n              <div\r\n                tabIndex={0}\r\n                role=\"button\"\r\n                onClick={() => this.toggleDrawer(false)}\r\n                onKeyDown={() => this.toggleDrawer(false)}\r\n              >\r\n                \r\n              </div>\r\n            </Drawer>\r\n            <IconButton\r\n              aria-owns={isMenuOpen ? 'material-appbar' : undefined}\r\n              aria-haspopup=\"true\"\r\n              onClick={this.handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n\r\n            </IconButton>\r\n            \r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nNavbar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Navbar);","import React from 'react';\r\nimport axios from 'axios'\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing.unit * 3,\r\n    overflowX: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n  layout:{\r\n    width:1400,\r\n    marginLeft:200\r\n  }\r\n});\r\n\r\n\r\nclass SimpleTable extends React.Component {\r\n    state = {\r\n        organizations: [],\r\n        organization:'',\r\n        key: ''\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        axios.get('/organizations')\r\n        .then(r => {\r\n            console.log(r.data)\r\n            this.setState({organizations:r.data})\r\n        })\r\n        .catch(e => console.log(e))\r\n    }\r\n\r\n    handleDelete = () => {\r\n      console.log('deleted')\r\n    }\r\n\r\ngetOrganization = event => {\r\n  axios.get('/organization/:id')\r\n        .then(r => {\r\n            console.log(r.data)\r\n            this.setState({organizations:r.data})\r\n        })\r\n        .catch(e => console.log(e))\r\n}\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n         <>\r\n          <AppBar position=\"\" color=\"default\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n              Organizations List\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n          <Paper className={classes.root} style={{width:1400, marginLeft:80, marginTop:50}}>\r\n            <Table className={classes.table}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Company Name</TableCell>\r\n                  <TableCell align=\"right\">Backup Status</TableCell>\r\n                  <TableCell align=\"right\">Computers Count</TableCell>\r\n                  <TableCell align=\"right\">Users Count</TableCell>\r\n                  <TableCell align=\"right\">Servers Count</TableCell>\r\n                  <TableCell align=\"right\">Live Nodes</TableCell>\r\n                  <TableCell align=\"right\">Option</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {this.state.organizations.map(organization => (\r\n                  <TableRow key={organization.id}>\r\n                    <TableCell component=\"th\" scope=\"row\" key={organization.id}><a href='/' onClick={this.getOrganization} >{organization.company.name}</a></TableCell>\r\n                    <TableCell align=\"right\" key={organization.id}>{`${organization.backup.completionStatus}`}</TableCell>\r\n                    <TableCell align=\"right\" key={organization.id}>{`${organization.computers.length}`}</TableCell>\r\n                    <TableCell align=\"right\" key={organization.id}>{`${organization.users.length}`}</TableCell>\r\n                    <TableCell align=\"right\" key={organization.id}>{`${organization.servers.length}`}</TableCell>\r\n                    <TableCell align=\"right\" key={organization.id}>{`${organization.localAreaNetwork.liveNodes}`}</TableCell>\r\n                    <TableCell align=\"right\" key={organization.id}><button onClick={this.handleDelete}>Delete</button></TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </Paper>\r\n          </>\r\n        );\r\n    }\r\n  \r\n}\r\n\r\nSimpleTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SimpleTable);","import React from 'react'\r\nimport OrgTable from '../OrgTable'\r\n\r\nclass Organizations extends React.Component{\r\n      \r\n    render(){\r\n        return(\r\n            <>\r\n            <OrgTable />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Organizations","import React from 'react'\r\nimport CheckOut from '../wizard/Checkout'\r\n\r\nclass Onboarding extends React.Component{\r\n    render(){\r\n        return(\r\n            <>\r\n            <CheckOut />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Onboarding","import React from 'react'\r\nimport './Home.css'\r\n\r\nimport firebase from 'firebase'\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth'\r\n\r\nclass Home extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <section className=\"intro\">\r\n          <div className=\"inner\">\r\n            <div className=\"content\">\r\n              <br />\r\n              <h1>Tech Connect</h1>\r\n              <h3>IT Documentation Like Nothing You've Seen Before</h3>\r\n              <br />\r\n              <br />\r\n              <StyledFirebaseAuth uiConfig={this.props.uiConfig} firebaseAuth={firebase.auth()} />\r\n              <br />\r\n              <h3>Already Have an Account? Sign-in</h3>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home","import React from 'react';\r\nimport './Loader.css'\r\n\r\nclass Loader extends React.Component {\r\n  render () {\r\n    return (\r\n      <>\r\n        <div class=\"loader\"></div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Loader;\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport './App.css';\nimport Dashboard from './Components/Dashboard'\nimport Navbar from './Components/Navbar'\nimport Organizations from './Components/Organizations';\nimport Onboarding from './Components/Onboarding'\nimport Home from './Components/Home'\nimport Loader from './Components/Loader'\nimport firebase from 'firebase'\n\nconst config = {\n  apiKey: \"AIzaSyANTWkjI1OJU4bLZAaA3fhMaXeMb630Sw8\",\n  authDomain: \"p3-techconnect.firebaseapp.com\",\n  databaseURL: \"https://p3-techconnect.firebaseio.com\",\n  projectId: \"p3-techconnect\",\n  storageBucket: \"p3-techconnect.appspot.com\",\n  messagingSenderId: \"533101658893\"\n};\nfirebase.initializeApp(config);\n\nconst uiConfig = {\n  // Popup signin flow rather than redirect flow.\n  signInFlow: 'popup',\n  // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n  signInSuccessUrl: './Dashboard',\n  // We will display Google and Facebook as auth providers.\n  signInOptions: [\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n    firebase.auth.FacebookAuthProvider.PROVIDER_ID\n  ]\n}\n\nclass App extends Component {\n  state = {\n    isSignedIn: false\n  }\n\n  componentDidMount() {\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\n        (user) => this.setState({isSignedIn: !!user})\n    );\n  }\n\n  componentWillUnmount() {\n    this.unregisterAuthObserver();\n  }\n  \n  render() {\n    return (\n      <>\n      <Router>\n        <div>\n          <Navbar uiConfig={uiConfig} isSignedIn={this.state.isSignedIn} userName={this.state.name} />\n          <Route exact path='/' component={() => <Home uiConfig={uiConfig} isSignedIn={this.state.isSignedIn} userName={this.state.name} />} />\n          <Route path='/Dashboard' component={() => this.state.isSignedIn ? <Dashboard /> : <Loader uiConfig={uiConfig} isSignedIn={this.state.isSignedIn} userName={this.state.name}/>}/>\n          <Route path='/Organizations' component={() => this.state.isSignedIn ? <Organizations /> : <Loader uiConfig={uiConfig} isSignedIn={this.state.isSignedIn} userName={this.state.name}/>}/>\n          <Route path='/Onboarding' component={() => this.state.isSignedIn ? <Onboarding /> : <Loader uiConfig={uiConfig} isSignedIn={this.state.isSignedIn} userName={this.state.name}/>}/>\n        </div>\n      </Router>\n      </>\n    );\n  }\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport default function register () {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl)\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.')\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport registerServiceWorker from './registerServiceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\nregisterServiceWorker()\n"],"sourceRoot":""}